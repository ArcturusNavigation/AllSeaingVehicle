<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="athena">

  <include filename="$(find sim_suite)/urdf/inertia.xacro" />

  <xacro:property name="deck_width" value="1.05" />
  <xacro:property name="deck_length" value="1.35" />
  <xacro:property name="deck_height" value=".03" />
  <xacro:property name="hull_radius" value=".1" />
  <xacro:property name="hull_length" value="1.0" />


  <xacro:property name="camera_stand_height" value=".33" />
  <xacro:property name="lidar_stand_height" value=".15" />

  <xacro:property name="base_to_imu_x" value=".005" />
  <xacro:property name="base_to_imu_y" value="-.38" />

  <xacro:property name="base_to_gps_x" value="-.065" />
  <xacro:property name="base_to_gps_y" value="-.135" />
  <xacro:property name="gps_stand_height" value=".2" />



  <xacro:property name="left_motor_height" value=".25" />
  <xacro:property name="right_motor_height" value=".25" />
  <xacro:property name="motor_depth" value=".05" />
  <xacro:property name="motor_radius" value=".05" />
  <xacro:macro name="solid_box_inertia" params="m h d w">



    <inertia ixx="${(m*(h*h+d*d))/12}" ixy="0" ixz="0"
      iyy="${(m*(w*w+d*d))/12}" iyz="0"
      izz="${(m*(w*w+h*h))/12}"
    />
  </xacro:macro>
  <xacro:macro name="solid_sphere_inertia" params="m r">
    <inertia ixx="${(2*r*r*m)/5}" ixy="0" ixz="0"
      iyy="${(2*r*r*m)/5}" iyz="0"
      izz="${(2*r*r*m)/5}"
    />
  </xacro:macro>

  <xacro:macro name="hollow_sphere_inertia" params="m r">
    <inertia ixx="${(2*r*r*m)/3}" ixy="0" ixz="0"
      iyy="${(2*r*r*m)/3}" iyz="0"
      izz="${(2*r*r*m)/3}"
    />
  </xacro:macro>

  <xacro:macro name="ellipsoid_semi_axes_inertia" params="a b c m r">
    <inertia ixx="${(m*(b*b+c*c))/5}" ixy="0" ixz="0"
      iyy="${(m*(a*a+c*c))/5}" iyz="0"
      izz="${(m*(a*a+b*b))/5}"
    />
  </xacro:macro>

  <xacro:macro name="right_circular_cone_inertia" params="m r h">
    <inertia ixx="${((3*m*(h*h))/5)+((3*m*(r*r))/20)}" ixy="0" ixz="0"
      iyy="${((3*m*(h*h))/5)+((3*m*(r*r))/20)}" iyz="0"
      izz="${(3*m*(r*r))/10}"
    />
  </xacro:macro>

  <!-- Solid cuboid of width w, height h, depth d, and mass m -->
  <!-- yes, axis in solid_cuboid_inertia are changed, w relates to X axis, d to Z axis, and h to Y
  axis -->
  <xacro:macro name="solid_cuboid_inertia" params="m h d w">
    <inertia ixx="${(m*(h*h+d*d))/12}" ixy="0" ixz="0"
      iyy="${(m*(w*w+d*d))/12}" iyz="0"
      izz="${(m*(w*w+h*h))/12}"
    />
  </xacro:macro>

  <!-- Solid cylinder of radius r, height h and mass m -->
  <xacro:macro name="solid_cylinder_inertia" params="m r h">
    <inertia ixx="${m*(3*r*r+h*h)/12}" ixy="0" ixz="0"
      iyy="${m*(3*r*r+h*h)/12}" iyz="0"
      izz="${m*r*r/2}"
    />
  </xacro:macro>

  <!-- Thick-walled cylindrical tube with open ends, of inner radius r1, outer radius r2, length h
  and mass m -->
  <xacro:macro name="thick_walled_cylinder_inertia" params="m r1 r2 h">
    <inertia ixx="${m*((3*(r1*r1+r2*r2))+(h*h))/12}" ixy="0" ixz="0"
      iyy="${m*((3*(r1*r1+r2*r2))+(h*h))/12}" iyz="0"
      izz="${m*(r1*r1+r2*r2)/2}"
    />
  </xacro:macro>

  <xacro:macro name="propeller" params="side">
    <link name='${side}_propeller_link'>
      <!-- <pose>0 0 0 0 -1.57079 0</pose> -->
      <inertial>
        <!-- <pose>0 0 -.16 0 -0 0</pose> -->
        <mass value="0.5" />
        <inertia ixx="0.008545" ixy="0" ixz="0"
          iyy="0.008545" iyz="0"
          izz="0.0144"
        />
      </inertial>
      <self_collide>0</self_collide>
      <enable_wind>0</enable_wind>
      <kinematic>0</kinematic>
      <visual name='${side}_propeller_link_visual'>
        <!-- <pose>0 0 0 0 -1.57079 0</pose> -->
        <geometry>
          <!-- <mesh>
            <scale>1 1 1</scale>
            <uri>model://boat/meshes/propeller.dae</uri>
          </mesh> -->
          <cylinder radius="${motor_radius}" length="0.09" />
        </geometry>
        <material name="red">
          <color rgba="1 0 0 1" />
        </material>
      </visual>
      <collision name='${side}_propeller_link_collision'>
        <laser_retro>0</laser_retro>
        <max_contacts>10</max_contacts>
        <!-- <pose>-0.08 0 0 3.14159 -0 3.14159</pose> -->
        <geometry>
          <cylinder radius="${motor_radius}" length="0.09" />
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
            <torsional>
              <coefficient>1</coefficient>
              <patch_radius>0</patch_radius>
              <surface_radius>0</surface_radius>
              <use_patch_radius>1</use_patch_radius>
              <ode>
                <slip>0</slip>
              </ode>
            </torsional>
          </friction>
          <bounce>
            <restitution_coefficient>0</restitution_coefficient>
            <threshold>1e+06</threshold>
          </bounce>
          <contact>
            <collide_without_contact>0</collide_without_contact>
            <collide_without_contact_bitmask>1</collide_without_contact_bitmask>
            <collide_bitmask>1</collide_bitmask>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+13</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0</min_depth>
            </ode>
            <bullet>
              <split_impulse>1</split_impulse>
              <split_impulse_penetration_threshold>-0.01</split_impulse_penetration_threshold>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+13</kp>
              <kd>1</kd>
            </bullet>
          </contact>
        </surface>
      </collision>
    </link>
  </xacro:macro>



  
  <link name='dummy_base_link' />
  <joint name='dummy_base_joint' type='fixed'>
    <parent link='dummy_base_link' />
    <child link='base_link' />
    <origin xyz='0 0 0' rpy='0 0 0' />
  </joint>

  <link name="base_link">
    <visual>
      <geometry>
        <box size="${deck_length} ${deck_width} ${deck_height}" />
      </geometry>
      <material name="brown">
        <color rgba="0.5 0.5 0 1" />
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${deck_length} ${deck_width} ${deck_height}" />
      </geometry>
    </collision>
    <inertial>
      <mass value=".10" />
      <xacro:solid_box_inertia m=".10" d="${deck_length}" w="${deck_width}" h="${deck_height}" />
    </inertial>
  </link>

  <link name="right_hull">
    <visual>
      <geometry>
        <cylinder length="${hull_length}" radius="${hull_radius}" />
      </geometry>
      <material name="yellow">
        <color rgba="1 1 0 1" />
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${hull_length}" radius="${hull_radius}" />
      </geometry>
    </collision>
    <intertial>
      <mass value=".5" />
      <xacro:solid_cylinder_inertia m=".5" r="${hull_radius}" h="${hull_length}" />
    </intertial>
  </link>
  <joint name="right_hull_joint" type="fixed">
    <parent link="base_link" />
    <child link="right_hull" />
    <origin xyz="0 ${deck_width/2} ${-(deck_height/2 + hull_radius)}" rpy="0 1.57 0" />
  </joint>

  <link name="left_hull">
    <visual>
      <geometry>
        <cylinder length="1.0" radius="0.1" />
      </geometry>
      <material name="yellow">
        <color rgba="1 1 0 1" />
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${hull_length}" radius="${hull_radius}" />
      </geometry>
    </collision>
    <intertial>
      <mass value=".5" />
      <xacro:solid_cylinder_inertia m=".5" r="${hull_radius}" h="${hull_length}" />
    </intertial>
  </link>
  <joint name="left_hull_joint" type="fixed">
    <parent link="base_link" />
    <child link="left_hull" />
    <origin xyz="0 ${-deck_width/2} ${-(deck_height/2 + hull_radius)}" rpy="0 1.57 0" />
  </joint>

  <link name="camera_stand">
    <visual>
      <geometry>
        <box size=".025 .025 ${camera_stand_height}" />
      </geometry>
      <material name="red">
        <color rgba="1 0 0 1" />
      </material>
    </visual>
    <inertial>
      <mass value=".05" />
      <xacro:solid_box_inertia m=".05" d=".025" w=".025" h="${camera_stand_height}" />
    </inertial>
  </link>
  <joint name="camera_stand_joint" type="fixed">
    <parent link="base_link" />
    <child link="camera_stand" />
    <origin xyz="${(deck_length / 2) - .1} 0 ${camera_stand_height/2}" />
  </joint>
  <link name="camera_link">
    <visual>
      <geometry>
        <box size=".025 .17 .025" />
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1" />
      </material>
    </visual>
    <inertial>
      <mass value=".05" />
      <xacro:solid_box_inertia m=".05" d=".025" w=".05" h=".025" />
    </inertial>
  </link>

  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <horizontal_fov>1.047</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
      </image>
      <clip>
        <near>0.1</near>
        <far>100</far>
      </clip>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <plugin name='camera_controller' filename='libgazebo_ros_camera.so'>
        <alwaysOn>1</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>zed2i</cameraName>
        <imageTopicName>/zed2i/zed_node/rgb/image_rect_color</imageTopicName>
        <cameraInfoTopicName>/zed_node/camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <joint name="camera_joint" type="fixed">
    <parent link="camera_stand" />
    <child link="camera_link" />
    <origin xyz="0 0 ${camera_stand_height/2}" />
  </joint>

  <link name="lidar_stand">
    <visual>
      <geometry>
        <box size=".025 .025 ${lidar_stand_height}" />
      </geometry>
      <material name="red">
        <color rgba="1 0 0 1" />
      </material>
    </visual>
    <inertial>
      <mass value=".25" />
      <xacro:solid_box_inertia m=".25" d=".025" w=".025" h="${lidar_stand_height}" />
    </inertial>
  </link>

  <joint name="lidar_stand_joint" type="fixed">
    <parent link="base_link" />
    <child link="lidar_stand" />
    <origin xyz="${(deck_length / 2) - .1} 0 ${lidar_stand_height/2}" />
  </joint>

  <link name='velodyne_lidar'>
    <visual>
      <geometry>
        <cylinder radius='.0425' length='.14'/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1" />
      </material>
    </visual>
  </link>

  <joint name="lidar_mount_joint" type="fixed">
    <parent link="lidar_stand"/>
    <child link="velodyne_lidar"/>
    <origin xyz="0 0 ${lidar_stand_height/2}" />
  </joint>


  <link name='imu_link'>
    <inertial>
      <mass value='0.015' />
      <inertia ixx='1e-05' ixy='0' ixz='0'
        iyy='1e-05' iyz='0'
        izz='1e-05'
      />
    </inertial>
    <visual>
      <geometry>
        <box size=".09 .04 .025" />
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1" />
      </material>
    </visual>
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
  </link>

  <joint name='imu_joint' type='fixed'>
    <parent link='base_link' />
    <child link='imu_link' />
    <origin xyz="${base_to_imu_x} ${base_to_imu_y} ${deck_height/2}" />

    <axis>
      <xyz>1 0 0</xyz>
      <use_parent_model_frame>1</use_parent_model_frame>
      <limit>
        <lower>0</lower>
        <upper>0</upper>
        <effort>0</effort>
        <velocity>0</velocity>
      </limit>
      <dynamics>
        <spring_reference>0</spring_reference>
        <spring_stiffness>0</spring_stiffness>
        <damping>0.7</damping>
        <friction>0</friction>
      </dynamics>
    </axis>
    <physics>
      <ode>
        <limit>
          <cfm>0</cfm>
          <erp>0.2</erp>
        </limit>
        <suspension>
          <cfm>0</cfm>
          <erp>0.2</erp>
        </suspension>
      </ode>
    </physics>
  </joint>

  <gazebo reference="imu_link">
    <sensor name='imu_sensor' type='imu'>
      <pose frame=''>0 0 0 -3.14159 -0 0</pose>
      <always_on>1</always_on>
      <update_rate>1000</update_rate>
      <imu />
    </sensor>
  </gazebo>

  <link name='gps_stand_link'>
    <visual>
      <geometry>
        <box size=".01 .01 ${gps_stand_height}" />
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1" />
      </material>
    </visual>
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
  </link>

  <joint name="gps_stand_joint" type="fixed">
    <parent link="base_link" />
    <child link="gps_stand_link" />
    <origin xyz="${base_to_gps_x} ${base_to_gps_y} ${deck_height}" />
  </joint>

  <link name='gps_link'>
    <inertial>
      <mass value='0.015' />
      <inertia ixx='1e-05' ixy='0' ixz='0'
        iyy='1e-05' iyz='0'
        izz='1e-05'
      />
    </inertial>
    <visual>
      <geometry>
        <box size=".04 .04 .025" />
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1" />
      </material>
    </visual>
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
  </link>

  <joint name="gps_mount_joint" type="fixed">
    <parent link="gps_stand_link" />
    <child link="gps_link" />
    <origin xyz="0 0 ${gps_stand_height}" />
  </joint>

  <link name="left_motor_mount">
    <visual>
      <geometry>
        <box size=".025 .025 ${left_motor_height}" />
      </geometry>
      <material name="red">
        <color rgba="1 0 0 1" />
      </material>
    </visual>
    <inertial>
      <mass value=".1" />
      <xacro:solid_box_inertia m=".1" d=".025" w=".025" h="${left_motor_height}" />
    </inertial>
  </link>
  <joint name="left_motor_mount_joint" type="fixed">
    <parent link="base_link" />
    <child link="left_motor_mount" />
    <origin xyz="${-deck_length/2-.0125} ${-deck_width/4} ${-(deck_height + left_motor_height)/2}" />

    <!-- <axis xyz="0 0 1"/>
        <limit lower="${-(deck_height + left_motor_height)/2}" upper="${-(deck_height +
    left_motor_height)/2}" effort="100" velocity="100"/> -->
  </joint>
  <link name="right_motor_mount">
    <visual>
      <geometry>
        <box size=".025 .025 ${right_motor_height}" />
      </geometry>
      <material name="red">
        <color rgba="1 0 0 1" />
      </material>
    </visual>
    <inertial>
      <mass value=".1" />
      <xacro:solid_box_inertia m=".1" d=".025" w=".025" h="${right_motor_height}" />
    </inertial>
  </link>
  <joint name="right_motor_mount_joint" type="fixed">
    <parent link="base_link" />
    <child link="right_motor_mount" />
    <origin xyz="${-deck_length/2-.0125} ${deck_width/4} ${-(deck_height + right_motor_height)/2}" />
    <!-- <axis xyz="0 0 1"/>
        <limit lower="0" upper="0" effort="100" velocity="100"/> -->
  </joint>

  <!-- <xacro:propeller side="left"/>  -->
  <link name='left_propeller_link'>
    <!-- <pose>0 0 0 0 -1.57079 0</pose> -->
    <inertial>
      <origin rpy='0 1.57 0' />
      <!-- <pose>0 0 -.16 0 -0 0</pose> -->
      <mass value="0.5" />
      <inertia ixx="0.008545" ixy="0" ixz="0"
        iyy="0.008545" iyz="0"
        izz="0.0144"
      />
    </inertial>
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
    <visual name='left_propeller_link_visual'>
      <!-- <pose>0 0 0 0 -1.57079 0</pose> -->
      <origin rpy='0 1.57 0' />
      <geometry>
        <!-- <mesh>
      <scale>1 1 1</scale>
      <uri>model://boat/meshes/propeller.dae</uri>
    </mesh> -->
        <cylinder radius="${motor_radius}" length="0.09" />
      </geometry>
      <material name="red">
        <color rgba="1 0 0 1" />
      </material>
    </visual>
    <collision name='left_propeller_link_collision'>
      <origin rpy='0 1.57 0'/>
      <laser_retro>0</laser_retro>
      <max_contacts>10</max_contacts>
      <!-- <pose>-0.08 0 0 3.14159 -0 3.14159</pose> -->
      <geometry>
        <cylinder radius="${motor_radius}" length="0.09" />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>1</mu>
            <mu2>1</mu2>
            <fdir1>0 0 0</fdir1>
            <slip1>0</slip1>
            <slip2>0</slip2>
          </ode>
          <torsional>
            <coefficient>1</coefficient>
            <patch_radius>0</patch_radius>
            <surface_radius>0</surface_radius>
            <use_patch_radius>1</use_patch_radius>
            <ode>
              <slip>0</slip>
            </ode>
          </torsional>
        </friction>
        <bounce>
          <restitution_coefficient>0</restitution_coefficient>
          <threshold>1e+06</threshold>
        </bounce>
        <contact>
          <collide_without_contact>0</collide_without_contact>
          <collide_without_contact_bitmask>1</collide_without_contact_bitmask>
          <collide_bitmask>1</collide_bitmask>
          <ode>
            <soft_cfm>0</soft_cfm>
            <soft_erp>0.2</soft_erp>
            <kp>1e+13</kp>
            <kd>1</kd>
            <max_vel>0.01</max_vel>
            <min_depth>0</min_depth>
          </ode>
          <bullet>
            <split_impulse>1</split_impulse>
            <split_impulse_penetration_threshold>-0.01</split_impulse_penetration_threshold>
            <soft_cfm>0</soft_cfm>
            <soft_erp>0.2</soft_erp>
            <kp>1e+13</kp>
            <kd>1</kd>
          </bullet>
        </contact>
      </surface>
    </collision>
  </link>
  <gazebo reference="left_propeller_link">
    <pose relative_to='left_motor_joint'>0 0 0 0 -0 0</pose>
  </gazebo>
  <joint name="left_motor_joint" type="revolute">
    <parent link="base_link" />
    <child link="left_propeller_link" />
    <origin xyz="${-deck_length/2}  ${deck_width/4} ${-left_motor_height}"/>
    <limit lower="-1e+16" upper="1e+16" effort="-1" velocity="-1" />
    <axis xyz="1 0 0" />
    <physics>
      <ode>
        <limit>
          <cfm>0</cfm>
          <erp>0.2</erp>
        </limit>
        <suspension>
          <cfm>0</cfm>
          <erp>0.2</erp>
        </suspension>
      </ode>
    </physics>
  </joint>
  <gazebo reference="left_motor_joint">
    <use_parent_model_frame>1</use_parent_model_frame>
  </gazebo>
  <link name='right_propeller_link'>
    <!-- <pose>0 0 0 0 -1.57079 0</pose> -->
    
    <inertial>
      <!-- <pose>0 0 -.16 0 -0 0</pose> -->
      <origin  xyz='0 0 0'  rpy='0 1.57 0'/>
      <mass value="0.5" />
      <inertia ixx="0.008545" ixy="0" ixz="0"
        iyy="0.008545" iyz="0"
        izz="0.0144"
      />
    </inertial>
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
    <visual name='right_propeller_link_visual'>
      <!-- <pose>0 0 0 0 -1.57079 0</pose> -->
      <geometry>
        <!-- <mesh>
    <scale>1 1 1</scale>
    <uri>model://boat/meshes/propeller.dae</uri>
  </mesh> -->
        <cylinder radius="${motor_radius}" length="0.09" />
      </geometry>
      <origin  xyz='0 0 0' rpy='0 1.57 0'/>
      <material name="red">
        <color rgba="1 0 0 1" />
      </material>
    </visual>
    <collision name='right_propeller_link_collision'>
      <origin xyz='0 0 0' rpy='0 1.57 0'/>
      <laser_retro>0</laser_retro>
      <max_contacts>10</max_contacts>
      <!-- <pose>-0.08 0 0 3.14159 -0 3.14159</pose> -->
      <geometry>
        <cylinder radius="${motor_radius}" length="0.09" />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>1</mu>
            <mu2>1</mu2>
            <fdir1>0 0 0</fdir1>
            <slip1>0</slip1>
            <slip2>0</slip2>
          </ode>
          <torsional>
            <coefficient>1</coefficient>
            <patch_radius>0</patch_radius>
            <surface_radius>0</surface_radius>
            <use_patch_radius>1</use_patch_radius>
            <ode>
              <slip>0</slip>
            </ode>
          </torsional>
        </friction>
        <bounce>
          <restitution_coefficient>0</restitution_coefficient>
          <threshold>1e+06</threshold>
        </bounce>
        <contact>
          <collide_without_contact>0</collide_without_contact>
          <collide_without_contact_bitmask>1</collide_without_contact_bitmask>
          <collide_bitmask>1</collide_bitmask>
          <ode>
            <soft_cfm>0</soft_cfm>
            <soft_erp>0.2</soft_erp>
            <kp>1e+13</kp>
            <kd>1</kd>
            <max_vel>0.01</max_vel>
            <min_depth>0</min_depth>
          </ode>
          <bullet>
            <split_impulse>1</split_impulse>
            <split_impulse_penetration_threshold>-0.01</split_impulse_penetration_threshold>
            <soft_cfm>0</soft_cfm>
            <soft_erp>0.2</soft_erp>
            <kp>1e+13</kp>
            <kd>1</kd>
          </bullet>
        </contact>
      </surface>
    </collision>
  </link>
  <joint name="right_motor_joint" type="revolute">
    <parent link="base_link" />
    <child link="right_propeller_link" />
    <origin xyz="${-deck_length/2}  ${-deck_width/4} ${-left_motor_height}"/>
    <limit lower="-1e+16" upper="1e+16" effort="-1" velocity="-1" />
    <physics>
      <ode>
        <limit>
          <cfm>0</cfm>
          <erp>0.2</erp>
        </limit>
        <suspension>
          <cfm>0</cfm>
          <erp>0.2</erp>
        </suspension>
      </ode>
    </physics>
  </joint>
  <gazebo reference="right_motor_joint">
    <axis>
      <xyz>1 0 0</xyz>
      <use_parent_model_frame>1</use_parent_model_frame>

    </axis> 
  </gazebo>

  <gazebo>
    <plugin name='ArduCopter_Plugin' filename='libArduPilotPlugin.so'>
      <fdm_addr>127.0.0.1</fdm_addr>
      <fdm_port_in>9002</fdm_port_in>
      <fdm_port_out>9003</fdm_port_out>
      <modelXYZToAirplaneXForwardZDown>0 0 0 3.141593 0 0</modelXYZToAirplaneXForwardZDown>
      <gazeboXYZToNED>0 0 0 3.141593 0 0</gazeboXYZToNED>
      <imuName>dummy_base_link::imu_sensor</imuName>
      <connectionTimeoutMaxCount>5</connectionTimeoutMaxCount>
      <control channel='0'>
        <type>VELOCITY</type>
        <offset>-0.5</offset>
        <p_gain>1</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>10</cmd_max>
        <cmd_min>-10</cmd_min>
        <jointName>left_motor_joint</jointName>
        <multiplier>-100</multiplier>
      </control>
      <control channel='2'>
        <type>VELOCITY</type>
        <offset>-0.5</offset>
        <p_gain>1</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>10</cmd_max>
        <cmd_min>-10</cmd_min>
        <jointName>right_motor_joint</jointName>
        <multiplier>-100</multiplier>
      </control>
    </plugin>
    <plugin name='rotor_1_blade_1' filename='libLiftDragPlugin.so'>
      <a0>2</a0>
      <alpha_stall>4</alpha_stall>
      <cla>10.2500</cla>
      <cda>0.10</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>997</air_density>
      <cp>0.084 0 0</cp>
      <forward>0 1 0</forward>
      <upward>0 0 1</upward>
      <link_name>right_propeller_link</link_name>
    </plugin>
    <plugin name='rotor_1_blade_2' filename='libLiftDragPlugin.so'>
      <a0>2</a0>
      <alpha_stall>4</alpha_stall>
      <cla>10.2500</cla>
      <cda>0.10</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>997</air_density>
      <cp>-0.084 0 0</cp>
      <forward>0 -1 0</forward>
      <upward>0 0 1</upward>
      <link_name>left_propeller_link</link_name>
    </plugin>
    <plugin name='usv_dynamics_wamv_dynamics_plugin' filename='libusv_gazebo_dynamics_plugin.so'>
      <bodyName>base_link</bodyName>
      <waterLevel>.25</waterLevel>
      <waterDensity>997.8</waterDensity>
      <xDotU>0.0</xDotU>
      <yDotV>0.0</yDotV>
      <nDotR>0.0</nDotR>
      <xU>51.3</xU>
      <xUU>72.4</xUU>
      <yV>40.0</yV>
      <yVV>0.0</yVV>
      <zW>500.0</zW>
      <kP>50.0</kP>
      <mQ>50.0</mQ>
      <nR>400.0</nR>
      <nRR>0.0</nRR>
      <hullRadius>${hull_radius}</hullRadius>
      <boatWidth>${deck_width + 2*hull_radius}</boatWidth>
      <boatLength>1</boatLength>
      <length_n>2</length_n>
      <!-- <wave_model>ocean</wave_model> -->
      <wave_n> 3 </wave_n>
      <wave_amp0> 0</wave_amp0>
      <wave_amp1> 0</wave_amp1>
      <wave_amp2> 0</wave_amp2>
      <wave_period0> 12 </wave_period0>
      <wave_period1> 8 </wave_period1>
      <wave_period2> 5.33333 </wave_period2>
      <wave_direction0> 0.921061 -0.389418 </wave_direction0>
      <wave_direction1> 1 0 </wave_direction1>
      <wave_direction2> 0.921061 0.389418 </wave_direction2>
    </plugin>
  </gazebo>
</robot>